version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: priceguard-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: priceguard
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d priceguard"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - priceguard-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: priceguard-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - priceguard-network

  # PriceGuard API (Development)
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: priceguard-api
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - HOST=0.0.0.0
      - GIN_MODE=debug
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=priceguard
      - DB_SSL_MODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - JWT_SECRET=RTqoPK8f/itDxB+rMmJ4iSkreYIyUajII6ihOR9gO0E=
      - JWT_EXPIRATION=24h
      - JWT_REFRESH_EXPIRATION=168h
      - APP_ENV=development
      - LOG_LEVEL=debug
      - LOG_FORMAT=json
      - LOG_OUTPUT=stdout
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:8080
      - ENABLE_METRICS=true
      - ENABLE_REQUEST_LOGGING=true
      - ENABLE_ERROR_STACK_TRACE=true
    volumes:
      - .:/app:delegated
      - go_mod_cache:/go/pkg/mod
      - air_tmp:/app/tmp
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - priceguard-network
    stdin_open: true
    tty: true

  # Adminer for Database Management
  adminer:
    image: adminer:latest
    container_name: priceguard-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - priceguard-network

  # Redis Commander for Redis Management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: priceguard-redis-commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
    depends_on:
      - redis
    networks:
      - priceguard-network

networks:
  priceguard-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  go_mod_cache:
    driver: local
  air_tmp:
    driver: local
